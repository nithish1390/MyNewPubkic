import javax.crypto.Cipher;
import java.security.*;
import java.security.spec.PKCS8EncodedKeySpec;
import java.util.Base64;

public class RawRSADecryption {
    public static void main(String[] args) throws Exception {
        String encryptedTextBase64 = "YourBase64EncodedCipherTextHere"; // Example base64-encrypted RSA text
        String privateKeyBase64 = "YourBase64EncodedPrivateKeyHere"; // RSA 2048-bit private key in Base64 format

        byte[] encryptedBytes = Base64.getDecoder().decode(encryptedTextBase64);
        byte[] privateKeyBytes = Base64.getDecoder().decode(privateKeyBase64);

        KeyFactory keyFactory = KeyFactory.getInstance("RSA");
        PrivateKey privateKey = keyFactory.generatePrivate(new PKCS8EncodedKeySpec(privateKeyBytes));

        Cipher cipher = Cipher.getInstance("RSA/ECB/PKCS1Padding"); // PKCS#1 v1.5 padding
        cipher.init(Cipher.DECRYPT_MODE, privateKey);

        byte[] decryptedBytes = cipher.doFinal(encryptedBytes);
        System.out.println("Decrypted Text: " + new String(decryptedBytes));
    }
}
